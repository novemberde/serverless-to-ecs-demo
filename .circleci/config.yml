version: 2
jobs:
  build:
    # docker:
    #   - image: novemberde/node-awscli
    docker:
      - image: docker:17.05.0-ce-git
    working_directory: ~/app
    steps:
      - checkout
      - run: npm install
      - run: npm test
      
      - setup_remote_docker
      - run:
          name: Build docker image
          command: |
            apk add --no-cache \
              py-pip=9.0.0-r1
            pip install \
              docker-compose==1.12.0 \
                awscli==1.11.76
      - restore_cache:
          keys:
            - v1-{{ .Branch }}
          paths:
            - /caches/${REPO_NAME}.tar
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/${REPO_NAME}.tar | true
      - run:
          name: Build application Docker image
          command: |
            docker build --cache-from=${REPO_NAME} -t ${REPO_NAME} .
      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p /caches
            docker save -o /caches/${REPO_NAME}.tar ${REPO_NAME}
      - save_cache:
          key: v1-{{ .Branch }}-{{ epoch }}
          paths:
            - /caches/${REPO_NAME}.tar
      - deploy:
          name: Push application Docker image
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              login="$(aws ecr get-login)"
              ${login}
              docker tag ${REPO_NAME} "${ECR_ENDPOINT}/${REPO_NAME}"
              docker push "${ECR_ENDPOINT}/${REPO_NAME}"
              # docker tag app "${ECR_ENDPOINT}/${REPO_NAME}:${CIRCLE_SHA1}"
              # docker push "${ECR_ENDPOINT}/${REPO_NAME}:${CIRCLE_SHA1}"
            fi
      # - run: npm install
      # - run: npm test
      # Deploy app
      # - run: npx serverless deploy
    
